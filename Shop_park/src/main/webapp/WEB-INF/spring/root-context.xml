<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">



	<!-- 나중에 수정 해야됨, 확인 할것 !!! -->
	<!-- <context:component-scan base-package="com.spring.shop.service"></context:component-scan> -->

	<!-- 설명 원본은 보드파일에서 찾아 볼것 -->
	<!-- 1번 방법(xml 방식) : 스프링에서 객체 생성을 하려면 bean을 이용해서 객체를 선언 한다 -->
	<!-- class를 적을때는 패케이지 명까지 다 적줘야 한다 -->
	<!-- id는 실행할 객체명을 적는다 -->
	<!-- 결과 : MemberServiceImpl memberService = new MemberServiceImpl(); 이 생성 된다 -->
	<!-- 사용할 컨트롤러 메소드 위에 @Autowired를 쓰면 땡겨 올수 있다 -->
	<!-- <bean id="memberService" class="com.kh.board.service.MemberServiceImpl"></bean> -->
	<!-- 이렇게 사용 하는 방법이 있는데 다른 방법으로 사용한다다 -->
	<!-- com.kh.board.service 해당 패케이지 안에 있는 것들을 읽게 만든다 -->
	<!-- @Service가 있는 객체를 만나면 자동으로 객체를 생성한다. -->






	<!-- Root Context: 개발자가 필요한 기능을 설정한다 -->

	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- <context:component-scan base-package="com.spring.service"/> -->
	<!-- 프로젝트 시작 시 필요한 객체를 미리 만듦 -->
	<bean id="dataSourceSpied" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="MyDB"></property>
		<property name="password" value="ORACLE"></property>
	</bean>

	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceSpied" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE" />
				<property name="sqlPrefix" value="SQL:::" />
			</bean>
		</property>
	</bean>

	<!-- 자바식으로 보면 SqlSessionFactoryBean(class) sqlSessionFactory(id) = new SqlSessionFactoryBean();로 생성 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">

		<!-- value="classpath:sql-map-config.xml" classpath:는 src/main/resources 폴더를 의미 한다. -->
		<property name="configLocation" value="classpath:sql-map-config.xml"></property>
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 자바식으로 보면 SqlSessionTemplate(class) sqlSessionTemplate(id가 없으면 class에서 앞글자 소문자로 바꿔쓴다) = new SqlSessionTemplate();로 생성 -->
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"></constructor-arg>
	</bean>


</beans>
